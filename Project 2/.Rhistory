4 + 5
foo = 4
fee = [4 5 6]
x <- c(1, 5, 4, 9, 0)
install.packages("igraph")
library(igraph)
libray('igraph')
library('igraph')
n = 1000
for(p in c(0.003, 0.004, 0.01, 0.05, 0.1)){
g = sample_gnp(n, p)
deg = degree(g)
hist = degree_distribution(g)
print(c('p:', p, mean(hist), var(hist)))
plot(hist)
}
clc
rm
rm()
p
n = 20
p = .5
g = sample_gnp(n, p)
g
plot(g, vertex.size=5, vertex.label=NA)
deg = degree(g)
mean(deg)
g = sample_gnp(n, p)
deg = degree(g)
mean(deg)
pwd
library("igraph")
library('Matrix')
library('pracma')
library('entropy')
library('infotheo')
# Loop through .circles files, and find those with >2 lines (2 circle memberships)
all_files = list.files(path="gplus", pattern="*.circles")
count = 0
for (iFile in all_files){
if (length(readLines(paste("gplus", iFile,sep="/"))) > 2){
count = count + 1
}
}
print(paste("Number of nodes with > 2 circles: ",count))
all_files
getwd()
install.packages("entropy")
setwd("~/Documents/GitHub/232E-Projects/Project 2")
# Loop through .circles files, and find those with >2 lines (2 circle memberships)
all_files = list.files(path="gplus", pattern="*.circles")
count = 0
for (iFile in all_files){
if (length(readLines(paste("gplus", iFile,sep="/"))) > 2){
count = count + 1
}
}
print(paste("Number of nodes with > 2 circles: ",count))
# Nodes to analyze
nodes = c("109327480479767108490","115625564993990145546","101373961279443806744")
for (node in nodes){
print(sprintf('Working on node %s ...',node))
# Create file and read in graph
edgefile = paste("gplus/", node, ".edges", sep = "")
node_graph = read_graph(edgefile, format="ncol", directed=TRUE)
# Add vertex and edges for node (not included by default)
node_graph = add_vertices(node_graph, nv = 1, name = node)
indexNode = which(V(node_graph)$name==node)
for (iGNode in seq(1, vcount(node_graph)-1,1)){
node_graph = node_graph + edge(indexNode, iGNode)
}
# Print out mean/var stats
deg_in = degree(node_graph,mode = "in")
print(sprintf('In-Degree: Mean=%5.3f, Var=%5.3f',mean(deg_in),var(deg_in)))
deg_out = degree(node_graph,mode = "out")
print(sprintf('Out-Degree: Mean=%5.3f, Var=%5.3f',mean(deg_out),var(deg_out)))
# Plot In/Out deg distirbutions
hist_in = degree_distribution(node_graph, mode = "in")
plot(hist_in, type="b", main=paste("Node ", node, ": In Degree Distribution"), lwd = 3,
xlab="Degree", ylab="Normalized Frequency",col="blue",cex.main = 1.6, cex.lab =1.5, cex.axis = 1.3)
hist_out = degree_distribution(node_graph, mode = "out")
print('debug')
plot(hist_out, type="b", main=paste("Node ", node, ": Out Degree Distribution"), lwd = 3,
xlab="Degree", ylab="Normalized Frequency",col="red",cex.main = 1.6, cex.lab =1.5, cex.axis = 1.3)
}
